|LogicalStep_Lab4_top
Clk => Extender_State_Machine:Extender_SM.clk_input
Clk => Bidir_shift_reg_4bit:Extender_bsr.CLK
rst_n => Extender_State_Machine:Extender_SM.rst_n
rst_n => Bidir_shift_reg_4bit:Extender_bsr.RESET_n
rst_n => Grappler_Control:g_controller.rst_n
pb[0] => Grappler_Control:g_controller.Grappler_Toggle
pb[1] => Extender_State_Machine:Extender_SM.Extender_Toggle
pb[2] => ~NO_FANOUT~
pb[3] => ~NO_FANOUT~
sw[0] => ~NO_FANOUT~
sw[1] => ~NO_FANOUT~
sw[2] => ~NO_FANOUT~
sw[3] => ~NO_FANOUT~
sw[4] => ~NO_FANOUT~
sw[5] => ~NO_FANOUT~
sw[6] => ~NO_FANOUT~
sw[7] => ~NO_FANOUT~
leds[0] <= <GND>
leds[1] <= <GND>
leds[2] <= <GND>
leds[3] <= Grappler_Control:g_controller.Grappler_Open
leds[4] <= Bidir_shift_reg_4bit:Extender_bsr.REG_BITS[0]
leds[5] <= Bidir_shift_reg_4bit:Extender_bsr.REG_BITS[1]
leds[6] <= Bidir_shift_reg_4bit:Extender_bsr.REG_BITS[2]
leds[7] <= Bidir_shift_reg_4bit:Extender_bsr.REG_BITS[3]
leds[8] <= <GND>
leds[9] <= <GND>
leds[10] <= <GND>
leds[11] <= <GND>
leds[12] <= <GND>
leds[13] <= <GND>
leds[14] <= <GND>
leds[15] <= <GND>


|LogicalStep_Lab4_top|Extender_State_Machine:Extender_SM
clk_input => previous_extender_toggle.CLK
clk_input => current_state~1.DATAIN
rst_n => previous_extender_toggle.ACLR
rst_n => current_state~3.DATAIN
Extender_Toggle => previous_extender_toggle.DATAIN
Extender_Toggle => Transition_Section.IN0
Extender_Enable => Transition_Section.IN1
Extender_Position[0] => Transition_Section.IN0
Extender_Position[0] => Transition_Section.IN0
Extender_Position[1] => Transition_Section.IN1
Extender_Position[1] => Transition_Section.IN1
Extender_Position[2] => Transition_Section.IN1
Extender_Position[2] => Transition_Section.IN1
Extender_Position[3] => Transition_Section.IN1
Extender_Position[3] => Transition_Section.IN1
Clk_en <= Clk_en.DB_MAX_OUTPUT_PORT_TYPE
LEFT0_RIGHT1 <= LEFT0_RIGHT1.DB_MAX_OUTPUT_PORT_TYPE
Extender_out <= Extender_out.DB_MAX_OUTPUT_PORT_TYPE
Grappler_Enable <= Grappler_Enable.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Bidir_shift_reg_4bit:Extender_bsr
CLK => sreg[0].CLK
CLK => sreg[1].CLK
CLK => sreg[2].CLK
CLK => sreg[3].CLK
RESET_n => sreg[0].ACLR
RESET_n => sreg[1].ACLR
RESET_n => sreg[2].ACLR
RESET_n => sreg[3].ACLR
CLK_EN => sreg[3].ENA
CLK_EN => sreg[2].ENA
CLK_EN => sreg[1].ENA
CLK_EN => sreg[0].ENA
LEFT0_RIGHT1 => sreg.OUTPUTSELECT
LEFT0_RIGHT1 => sreg.OUTPUTSELECT
LEFT0_RIGHT1 => sreg.OUTPUTSELECT
LEFT0_RIGHT1 => sreg.OUTPUTSELECT
REG_BITS[0] <= sreg[0].DB_MAX_OUTPUT_PORT_TYPE
REG_BITS[1] <= sreg[1].DB_MAX_OUTPUT_PORT_TYPE
REG_BITS[2] <= sreg[2].DB_MAX_OUTPUT_PORT_TYPE
REG_BITS[3] <= sreg[3].DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Grappler_Control:g_controller
rst_n => sreg.ACLR
Grappler_Toggle => sreg.CLK
Grappler_Enable => sreg.ENA
Grappler_Open <= sreg.DB_MAX_OUTPUT_PORT_TYPE


