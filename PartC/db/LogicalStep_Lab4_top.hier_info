|LogicalStep_Lab4_top
Clk => U_D_Bin_Counter4bit:X_COUNTER.CLK
Clk => U_D_Bin_Counter4bit:Y_COUNTER.CLK
Clk => Motion_Driver:M_DRIVE.CLK
Clk => Extender_State_Machine:Extender_SM.clk_input
Clk => Bidir_shift_reg_4bit:Extender_bsr.CLK
rst_n => U_D_Bin_Counter4bit:X_COUNTER.RESET_n
rst_n => U_D_Bin_Counter4bit:Y_COUNTER.RESET_n
rst_n => Motion_Driver:M_DRIVE.RST_N
rst_n => Extender_State_Machine:Extender_SM.rst_n
rst_n => Bidir_shift_reg_4bit:Extender_bsr.RESET_n
rst_n => Grappler_Control:g_controller.rst_n
pb[0] => Grappler_Control:g_controller.Grappler_Toggle
pb[1] => Extender_State_Machine:Extender_SM.Extender_Toggle
pb[2] => Motion_Driver:M_DRIVE.MOTION
pb[3] => ~NO_FANOUT~
sw[0] => Motion_Driver:M_DRIVE.Y_T[0]
sw[1] => Motion_Driver:M_DRIVE.Y_T[1]
sw[2] => Motion_Driver:M_DRIVE.Y_T[2]
sw[3] => Motion_Driver:M_DRIVE.Y_T[3]
sw[4] => Motion_Driver:M_DRIVE.X_T[0]
sw[5] => Motion_Driver:M_DRIVE.X_T[1]
sw[6] => Motion_Driver:M_DRIVE.X_T[2]
sw[7] => Motion_Driver:M_DRIVE.X_T[3]
leds[0] << Motion_Driver:M_DRIVE.ERR
leds[1] << <GND>
leds[2] << <GND>
leds[3] << Grappler_Control:g_controller.Grappler_Open
leds[4] << Bidir_shift_reg_4bit:Extender_bsr.REG_BITS[0]
leds[5] << Bidir_shift_reg_4bit:Extender_bsr.REG_BITS[1]
leds[6] << Bidir_shift_reg_4bit:Extender_bsr.REG_BITS[2]
leds[7] << Bidir_shift_reg_4bit:Extender_bsr.REG_BITS[3]
leds[8] << U_D_Bin_Counter4bit:Y_COUNTER.COUNTER_BITS[0]
leds[9] << U_D_Bin_Counter4bit:Y_COUNTER.COUNTER_BITS[1]
leds[10] << U_D_Bin_Counter4bit:Y_COUNTER.COUNTER_BITS[2]
leds[11] << U_D_Bin_Counter4bit:Y_COUNTER.COUNTER_BITS[3]
leds[12] << U_D_Bin_Counter4bit:X_COUNTER.COUNTER_BITS[0]
leds[13] << U_D_Bin_Counter4bit:X_COUNTER.COUNTER_BITS[1]
leds[14] << U_D_Bin_Counter4bit:X_COUNTER.COUNTER_BITS[2]
leds[15] << U_D_Bin_Counter4bit:X_COUNTER.COUNTER_BITS[3]


|LogicalStep_Lab4_top|U_D_Bin_Counter4bit:X_COUNTER
CLK => ud_bin_counter[0].CLK
CLK => ud_bin_counter[1].CLK
CLK => ud_bin_counter[2].CLK
CLK => ud_bin_counter[3].CLK
RESET_n => ud_bin_counter[0].ACLR
RESET_n => ud_bin_counter[1].ACLR
RESET_n => ud_bin_counter[2].ACLR
RESET_n => ud_bin_counter[3].ACLR
CLK_EN => process_0.IN0
CLK_EN => process_0.IN0
UP1_DOWN0 => process_0.IN1
UP1_DOWN0 => process_0.IN1
COUNTER_BITS[0] <= ud_bin_counter[0].DB_MAX_OUTPUT_PORT_TYPE
COUNTER_BITS[1] <= ud_bin_counter[1].DB_MAX_OUTPUT_PORT_TYPE
COUNTER_BITS[2] <= ud_bin_counter[2].DB_MAX_OUTPUT_PORT_TYPE
COUNTER_BITS[3] <= ud_bin_counter[3].DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|U_D_Bin_Counter4bit:Y_COUNTER
CLK => ud_bin_counter[0].CLK
CLK => ud_bin_counter[1].CLK
CLK => ud_bin_counter[2].CLK
CLK => ud_bin_counter[3].CLK
RESET_n => ud_bin_counter[0].ACLR
RESET_n => ud_bin_counter[1].ACLR
RESET_n => ud_bin_counter[2].ACLR
RESET_n => ud_bin_counter[3].ACLR
CLK_EN => process_0.IN0
CLK_EN => process_0.IN0
UP1_DOWN0 => process_0.IN1
UP1_DOWN0 => process_0.IN1
COUNTER_BITS[0] <= ud_bin_counter[0].DB_MAX_OUTPUT_PORT_TYPE
COUNTER_BITS[1] <= ud_bin_counter[1].DB_MAX_OUTPUT_PORT_TYPE
COUNTER_BITS[2] <= ud_bin_counter[2].DB_MAX_OUTPUT_PORT_TYPE
COUNTER_BITS[3] <= ud_bin_counter[3].DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Compx4:X_DRIVE
hex_val_A[0] => Compx1:comp0.A
hex_val_A[1] => Compx1:comp1.A
hex_val_A[2] => Compx1:comp2.A
hex_val_A[3] => Compx1:comp3.A
hex_val_B[0] => Compx1:comp0.B
hex_val_B[1] => Compx1:comp1.B
hex_val_B[2] => Compx1:comp2.B
hex_val_B[3] => Compx1:comp3.B
AGTB <= AGTB.DB_MAX_OUTPUT_PORT_TYPE
AEQB <= AEQB.DB_MAX_OUTPUT_PORT_TYPE
ALTB <= ALTB.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Compx4:X_DRIVE|Compx1:comp0
A => AGTB.IN0
A => AEQB.IN0
A => ALTB.IN0
B => AEQB.IN1
B => ALTB.IN1
B => AGTB.IN1
AGTB <= AGTB.DB_MAX_OUTPUT_PORT_TYPE
AEQB <= AEQB.DB_MAX_OUTPUT_PORT_TYPE
ALTB <= ALTB.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Compx4:X_DRIVE|Compx1:comp1
A => AGTB.IN0
A => AEQB.IN0
A => ALTB.IN0
B => AEQB.IN1
B => ALTB.IN1
B => AGTB.IN1
AGTB <= AGTB.DB_MAX_OUTPUT_PORT_TYPE
AEQB <= AEQB.DB_MAX_OUTPUT_PORT_TYPE
ALTB <= ALTB.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Compx4:X_DRIVE|Compx1:comp2
A => AGTB.IN0
A => AEQB.IN0
A => ALTB.IN0
B => AEQB.IN1
B => ALTB.IN1
B => AGTB.IN1
AGTB <= AGTB.DB_MAX_OUTPUT_PORT_TYPE
AEQB <= AEQB.DB_MAX_OUTPUT_PORT_TYPE
ALTB <= ALTB.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Compx4:X_DRIVE|Compx1:comp3
A => AGTB.IN0
A => AEQB.IN0
A => ALTB.IN0
B => AEQB.IN1
B => ALTB.IN1
B => AGTB.IN1
AGTB <= AGTB.DB_MAX_OUTPUT_PORT_TYPE
AEQB <= AEQB.DB_MAX_OUTPUT_PORT_TYPE
ALTB <= ALTB.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Compx4:Y_DRIVE
hex_val_A[0] => Compx1:comp0.A
hex_val_A[1] => Compx1:comp1.A
hex_val_A[2] => Compx1:comp2.A
hex_val_A[3] => Compx1:comp3.A
hex_val_B[0] => Compx1:comp0.B
hex_val_B[1] => Compx1:comp1.B
hex_val_B[2] => Compx1:comp2.B
hex_val_B[3] => Compx1:comp3.B
AGTB <= AGTB.DB_MAX_OUTPUT_PORT_TYPE
AEQB <= AEQB.DB_MAX_OUTPUT_PORT_TYPE
ALTB <= ALTB.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Compx4:Y_DRIVE|Compx1:comp0
A => AGTB.IN0
A => AEQB.IN0
A => ALTB.IN0
B => AEQB.IN1
B => ALTB.IN1
B => AGTB.IN1
AGTB <= AGTB.DB_MAX_OUTPUT_PORT_TYPE
AEQB <= AEQB.DB_MAX_OUTPUT_PORT_TYPE
ALTB <= ALTB.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Compx4:Y_DRIVE|Compx1:comp1
A => AGTB.IN0
A => AEQB.IN0
A => ALTB.IN0
B => AEQB.IN1
B => ALTB.IN1
B => AGTB.IN1
AGTB <= AGTB.DB_MAX_OUTPUT_PORT_TYPE
AEQB <= AEQB.DB_MAX_OUTPUT_PORT_TYPE
ALTB <= ALTB.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Compx4:Y_DRIVE|Compx1:comp2
A => AGTB.IN0
A => AEQB.IN0
A => ALTB.IN0
B => AEQB.IN1
B => ALTB.IN1
B => AGTB.IN1
AGTB <= AGTB.DB_MAX_OUTPUT_PORT_TYPE
AEQB <= AEQB.DB_MAX_OUTPUT_PORT_TYPE
ALTB <= ALTB.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Compx4:Y_DRIVE|Compx1:comp3
A => AGTB.IN0
A => AEQB.IN0
A => ALTB.IN0
B => AEQB.IN1
B => ALTB.IN1
B => AGTB.IN1
AGTB <= AGTB.DB_MAX_OUTPUT_PORT_TYPE
AEQB <= AEQB.DB_MAX_OUTPUT_PORT_TYPE
ALTB <= ALTB.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Motion_Driver:M_DRIVE
MOTION => next_state.OUTPUTSELECT
MOTION => next_state.OUTPUTSELECT
MOTION => Selector3.IN3
MOTION => Selector4.IN1
MOTION => X_OUT[3].IN0
MOTION => Selector2.IN1
X_T[0] => X_OUT[0]$latch.DATAIN
X_T[1] => X_OUT[1]$latch.DATAIN
X_T[2] => X_OUT[2]$latch.DATAIN
X_T[3] => X_OUT[3]$latch.DATAIN
Y_T[0] => Y_OUT[0]$latch.DATAIN
Y_T[1] => Y_OUT[1]$latch.DATAIN
Y_T[2] => Y_OUT[2]$latch.DATAIN
Y_T[3] => Y_OUT[3]$latch.DATAIN
EXTEND_OUT => next_state.DATAB
EXTEND_OUT => Selector5.IN3
EXTEND_OUT => Selector2.IN3
EXTEND_OUT => next_state.DATAB
CLK => cur_state~1.DATAIN
RST_N => cur_state~3.DATAIN
X_EQ => Transition_Section.IN0
X_EQ => XCLK_EN.DATAB
X_GT => ~NO_FANOUT~
X_LT => Selector7.IN1
Y_EQ => Transition_Section.IN1
Y_EQ => YCLK_EN.DATAB
Y_GT => ~NO_FANOUT~
Y_LT => Selector8.IN1
ERR <= ERR.DB_MAX_OUTPUT_PORT_TYPE
XCLK_EN <= XCLK_EN.DB_MAX_OUTPUT_PORT_TYPE
YCLK_EN <= YCLK_EN.DB_MAX_OUTPUT_PORT_TYPE
X_UP0_DOWN1 <= X_UP0_DOWN1$latch.DB_MAX_OUTPUT_PORT_TYPE
Y_UP0_DOWN1 <= Y_UP0_DOWN1$latch.DB_MAX_OUTPUT_PORT_TYPE
X_OUT[0] <= X_OUT[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
X_OUT[1] <= X_OUT[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
X_OUT[2] <= X_OUT[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
X_OUT[3] <= X_OUT[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
Y_OUT[0] <= Y_OUT[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
Y_OUT[1] <= Y_OUT[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
Y_OUT[2] <= Y_OUT[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
Y_OUT[3] <= Y_OUT[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
EXTEND_EN <= EXTEND_EN$latch.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Extender_State_Machine:Extender_SM
clk_input => previous_extender_toggle.CLK
clk_input => current_state~1.DATAIN
rst_n => previous_extender_toggle.ACLR
rst_n => current_state~3.DATAIN
Extender_Toggle => previous_extender_toggle.DATAIN
Extender_Toggle => Transition_Section.IN0
Extender_Enable => Transition_Section.IN1
Extender_Position[0] => Transition_Section.IN0
Extender_Position[0] => Transition_Section.IN0
Extender_Position[1] => Transition_Section.IN1
Extender_Position[1] => Transition_Section.IN1
Extender_Position[2] => Transition_Section.IN1
Extender_Position[2] => Transition_Section.IN1
Extender_Position[3] => Transition_Section.IN1
Extender_Position[3] => Transition_Section.IN1
Clk_en <= Clk_en.DB_MAX_OUTPUT_PORT_TYPE
LEFT0_RIGHT1 <= LEFT0_RIGHT1.DB_MAX_OUTPUT_PORT_TYPE
Extender_out <= Extender_out.DB_MAX_OUTPUT_PORT_TYPE
Grappler_Enable <= Grappler_Enable.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Bidir_shift_reg_4bit:Extender_bsr
CLK => sreg[0].CLK
CLK => sreg[1].CLK
CLK => sreg[2].CLK
CLK => sreg[3].CLK
RESET_n => sreg[0].ACLR
RESET_n => sreg[1].ACLR
RESET_n => sreg[2].ACLR
RESET_n => sreg[3].ACLR
CLK_EN => sreg[3].ENA
CLK_EN => sreg[2].ENA
CLK_EN => sreg[1].ENA
CLK_EN => sreg[0].ENA
LEFT0_RIGHT1 => sreg.OUTPUTSELECT
LEFT0_RIGHT1 => sreg.OUTPUTSELECT
LEFT0_RIGHT1 => sreg.OUTPUTSELECT
LEFT0_RIGHT1 => sreg.OUTPUTSELECT
REG_BITS[0] <= sreg[0].DB_MAX_OUTPUT_PORT_TYPE
REG_BITS[1] <= sreg[1].DB_MAX_OUTPUT_PORT_TYPE
REG_BITS[2] <= sreg[2].DB_MAX_OUTPUT_PORT_TYPE
REG_BITS[3] <= sreg[3].DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Grappler_Control:g_controller
rst_n => sreg.ACLR
Grappler_Toggle => sreg.CLK
Grappler_Enable => sreg.ENA
Grappler_Open <= sreg.DB_MAX_OUTPUT_PORT_TYPE


